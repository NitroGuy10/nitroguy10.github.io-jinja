<!DOCTYPE html>
<html lang="en">
<!-- Ah, you're looking at the source code aren't ya? Well, enjoy your stay! -->

<!-- GENERATED FROM projects.html.jinja -->

<head>
    <title>NitroGuy</title>

    <meta name="description" content="A list of NitroGuy's projects">
    {{ site.head }}
</head>

<body id="article">
    <h1><a href="/" class="unformatted-link">NitroGuy</a></h1>

    <div id="content">
        <h2 id="article-title">A List of Some of My Projects</h2>
        <hr>
        <br>
        <p>
            Hello! This is a list of some of my programming projects in roughly chronological order.
            This includes software, plugins, webpages, microcontroller projects, et cetera.
            Let me know if you have questions about anything and hope you enjoy!
        </p>
        <br>
        <hr>


        <h2 class="article-subsection" id="HelpR">HelpR</h2>
        <h3 class="article-subtitle">22 January 2022 - 1 October 2022 (First Public Deployment) - Ongoing</h3>
        <h3 class="article-subtitle">JavaScript - Node.js, Express, PostgreSQL, TypeORM, Socket.io</h3>
        <img src="../images/projects/helpr.png" class="article-image-intext" style="width: 40%;"
            alt="The HelpR landing page">
        <p>HelpR is a web app where hackathon participants can submit help tickets if they get stuck while making their project.
            The tickets get answered in real-time as mentors at the event will find hackers based on the location they attached to their ticket, and provide the assistance the hackers need.
            It's also a spiritual successor to <a href="https://github.com/ehzhang/HELPq">HELPq</a>.
        </p>
        <p>This might be the largest-scale project I've worked on thus far! It was made in a team 3 for use at TAMUhack hackathons.
            It was first deployed at HowdyHack 2022 on 1-2 October 2022 for use by 200+ hackers, and it worked amazingly with practically no hitches!
            (Sorry for all the exclamation marks. I'm really excited about this one if you can't tell :p)
        </p>
        <p>I was completely responsible for writing the backend for this app. I created a robust REST API with Express and used a PostgreSQL database to store users and tickets.
            I didn't make the frontend but, in case you were wondering, it's made using React, Next.js, and TailwindCSS.
            This project took months of development but it definitely paid off ...and we're not even done! We're gonna rewrite the whole thing in TypeScript soon. Wish us luck!
        </p>
        <p><a href="https://github.com/tamuhack-org/helpR">HelpR on GitHub</a></p>
        <p><a href="https://github.com/tamuhack-org/helpr-frontend">HelpR Frontend on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="Compara2r">Compara2r</h2>
        <h3 class="article-subtitle">3 March 2022 - 10 May 2022</h3>
        <h3 class="article-subtitle">HTML, CSS, JavaScript - Node.js, Express, PostgreSQL, TailwindCSS</h3>
        <img src="../images/projects/compara2r.png" class="article-image-intext" style="width: 40%;"
            alt="A Compara2r prompt">
        <p>Compara2r (pronounced "comparator") is a web app which you can use to find out the best thing among a dataset through 1-vs-1 comparisons.
            Users are shown a random comparison and are prompted to vote on which item they think is better.
            Users can vote as many times as they want and can also flag inappropriate items.
            Server admins can download the results and find out once and for all the best ...whatever... of all time.
        </p>
        <p>This was the first time I ever created a full-stack web app from scratch all by myself!
            It was super fun and I learned lot about creating backend servers, using databases, and deployment.
            Speaking of, I actually deployed Compara2r on Heroku using a free dyno which doesn't exist anymore because, sadly but understandably, Heroku are not offering their services for free anymore.
            Also TailwindCSS is awesome.
        </p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/Compara2r">Compara2r on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="recommends">recommends</h2>
        <h3 class="article-subtitle">25 December 2021 - 4 January 2022</h3>
        <h3 class="article-subtitle">Python, HTML, CSS, JavaScript - Flask, Jinja, SQLite, PyNaCl</h3>
        <img src="../images/projects/recommends.png" class="article-image-intext" style="width: 40%;"
            alt="A user's page on recommends">
        <p>A social media site where users can recommend books, movies, etc. to their friends.
            <a href="https://prydt.xyz/">prydt</a> and I made this in a couple days using Flask, Jinja, SQLite, PyNaCl,
            and the usual HTML/CSS/JavaScript shebang. I mainly worked on the frontend and pry worked on the login and
            database stuff. Overall, I'm pretty happy with how this turned out. It's quite minimal, but I feel like it
            has a lot of potential if we were ever to come back and polish/expand/deploy it.
        </p>
        <p><a href="https://github.com/prydt/recommends">recommends on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="overthere">overthere</h2>
        <h3 class="article-subtitle">19 December - 24 December 2021</h3>
        <h3 class="article-subtitle">Python, HTML, CSS, JavaScript - Flask, SQLite</h3>
        <img src="../images/projects/overthere.png" class="article-image-intext" style="width: 40%;"
            alt="The interface of overthere">
        <p>I sat thinking hard and long about my life and my future. Finally, I came to a realization: "Hm, I should
            probably make something with SQL." And overthere was born.</p>
        <p>overthere is bit.ly/tinyurl clone-ish that lets you post multiple links on one page. It also has fun,
            memorable URLs
            like "exquisite-cow"&mdash;a feature inspired by <a
                href="https://magic-wormhole.readthedocs.io/">Magic-Wormhole</a>.</p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/overthere">overthere on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="Supremely_Hexagonal">Supremely_Hexagonal</h2>
        <h3 class="article-subtitle">28 October - 1 November 2021</h3>
        <h3 class="article-subtitle">Java - Processing</h3>
        <img src="../images/projects/supremely_hexagonal_gameplay.gif" class="article-image-intext" style="width: 40%;"
            alt="Gameplay from Supremely Hexagonal">
        <p>Supremely_Hexagonal is a simplistic remake of <a href="https://superhexagon.com/">Super Hexagon</a> by Terry
            Cavanagh in
            Processing. I actually make
            <a href="https://drive.google.com/drive/folders/1ybSnsOlCGJLBSq4J3zse6883kvYxB3lb?usp=sharing"> a LOT of
                stuff for fun</a> in <a href="https://processing.org/">Processing</a> but I
            don't post it on GitHub because most of it isn't exactly useful software lol.
        </p>
        <p>This one actually has a story. I was sitting in class with my roommate and he was playing Super Hexagon
            on his phone. I watched him play for a while and then said, "I bet I could make that". So that night I did.
            We both had just taken a math test and while any normal person would have been relaxing, I was coding for
            fun
            like a weirdo. I finished the MVP that night and was completely done two days later!</p>
        <p>I find it kind of ridiculous that I was able to make this in such a short amount of time. Though, this same
            phenomenon crops up a lot when writing music for me (and many others I'm sure). You could spend months
            and years on something and never quite get it the way you want it, but then one day you get inspired, start
            something new, and completely finish it in a day or two. That was not supposed to rhyme.</p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/Supremely_Hexagonal">Supremely_Hexagonal on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="Peekaboo">Peekaboo</h2>
        <h3 class="article-subtitle">1 October - 21 October 2021</h3>
        <h3 class="article-subtitle">Java</h3>
        <p>Another short and sweet one. Peekaboo lets you take screenshots from the terminal using Java's Robot class.
            That is all.</p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/Peekaboo">Peekaboo on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="VEGAS Scripts/Plugins">VEGAS Scripts/Plugins</h2>
        <h3 class="article-subtitle">26 July - 16 August 2021</h3>
        <h3 class="article-subtitle">C# - Windows Forms, VEGAS Pro Script API</h3>
        <img src="../images/projects/oscillator_randomizer_gui.png" class="article-image-intext" style="width: 40%;"
            alt="The GUI of my plugin VEGAS_Oscillator_Randomizer">
        <p>
            When I first started using MAGIX VEGAS Pro 18, I found it generally very advanced and feature
            rich, but at the same time lacking in certain effects that are standard in most editing software
            I've used. When I found out how easy it was to make plugins for VEGAS, I kind of got a little
            obsessed and
            made a whole bunch of 'em! This actually was my first time ever making plugins and
            while there is hardly any information or tutorials online on how to make VEGAS plugins, I must
            say the API and docs- er... <em>doc</em> is quite good. Mostly.
        </p>
        <p>
            This was also my first time working with C# outside of Unity and I quite like it. It also helps
            that it was really easy to pick up since its syntax is exceptionally similar to Java except for
            the Capitalization Of Everything. Working with Windows Forms was also very fun. There's
            something I can't really explain about the look of those default Windows dialog boxes that's
            somewhat nostalgic and just generally cool to work with; I get that same feeling with Java's
            Swing using the default look-and-feel. I don't know what it is. Maybe I'm just weird like that.
            I definitely envision myself using C# for something else in the future.
        </p>
        <p>
            I guess I should talk about the actual plugins, huh? Well there are a couple of really simple ones like one
            that selects everything after the playhead and one that adds a VEGAS Picture In Picture effect to everything
            (because yes, I wanted a script for that). The big and complex ones include a "screen shake" effect, a super
            janky "chromatic aberration" effect, and a plugin that can animate any parameter of a video effect based on
            an
            oscillator, random number generator, or noise.
        </p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/Vegas-Scripts#readme">VEGAS_Scripts on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="nitroguy10.github.io">nitroguy10.github.io</h2>
        <h3 class="article-subtitle">11 December 2016 - Ongoing</h3>
        <h3 class="article-subtitle">Python, HTML, Sass, JavaScript - Jinja, JSON</h3>
        <p>Hey, it's the website you're on right now! The way this site was created is actually pretty complicated and
            made for a good story, so I wrote a whole other article about it. Check it out!</p>
        <p><a href=about_website.html>How This Website Was Made, A Story</a></p>
        <hr>

        <h2 class="article-subsection" id="ERS-OL">ERS-OL</h2>
        <h3 class="article-subtitle">24 June - 3 July 2021</h3>
        <h3 class="article-subtitle">Python, HTML, CSS, JavaScript - Flask, Socket.io</h3>
        <img src="../images/projects/ers-ol.png" class="article-image-intext" style="width: 40%;"
            alt="Egyptian Rat Screw Online">
        <p>
            ERS-OL (Egyptian Rat Screw Online) is an online multiplayer web game version of my favorite card game,
            Egyptian Rat Screw. The game isn't actually being hosted anywhere right now so if you want to play it, you'd
            have to clone the repository and run the server yourself. It uses Python for the server and, unsurprisingly,
            JavaScript for the client.
        </p>
        <p>
            Just like my website, this is another project I'm suuuuuper proud of. I've never come close to doing a
            project involving networking at this scale or even at all. It took me an unprecedented amount of time and
            effort to complete it and I really am very happy with the final product... if it weren't for the ping.
        </p>
        <p>
            *sigh* yeah... in practice this game is rather unplayable over the internet because the ping gives the host
            a massive advantage. Actually, this game runs quite well if played over LAN, but if you're able to play this
            over LAN, THEN WHY NOT JUST PLAY THE ACTUAL CARD GAME AHAHHAHAHAH.
        </p>
        <p>
            Despite all that, I'm really happy I was able to finish this project. At the very least, it reassured me
            that game development is not the career path for me :P
        </p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/ERS-OL">ERS-OL on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="ColorSplitter">ColorSplitter</h2>
        <h3 class="article-subtitle">28 June - 29 June 2021</h3>
        <h3 class="article-subtitle">Java - Swing</h3>
        <img src="../images/projects/colorsplitter.png" class="article-image-intext" style="width: 40%;"
            alt="The GUI of ColorSplitter">
        <p>
            ColorSplitter takes an input folder of images and isolates certain colors from that image (generating
            "whitemasks") and outputs them into a folder. I originally made it in Processing but then I realized I only
            used like 2 things from Processing so I remade it in pure Java. I'm not entirely sure what the applications
            for this are lol. I actually made this upon request from one of my friends. He needed a program that
            generated whitemasks for his game sprites or something so that program I did make.
        </p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/ColorSplitter">ColorSplitter on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="DocLCD">DocLCD</h2>
        <h3 class="article-subtitle">2 June - 4 June 2021</h3>
        <h3 class="article-subtitle">Python, Arduino - PySerial, Pygame</h3>
        <p>
            DocLCD is a "word processor" of sorts for 20x4 character LCDs with I2C drivers. It's controlled by a Python
            program running on a Raspberry Pi which talks via serial to an Arduino program. The Arduino program then
            controls the character LCD through the LCD's I2C driver. The Python program accepts keyboard input and
            allows you type characters and traverse around the LCD screen.
        </p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/DocLCD">DocLCD on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="TimeRefresher">TimeRefresher</h2>
        <h3 class="article-subtitle">2 June 2021</h3>
        <h3 class="article-subtitle">Java - Swing</h3>
        <img src="../images/projects/timerefresher.png" class="article-image-intext" style="width: 40%;"
            alt="The GUI of TimeRefresher">
        <p>
            I needed TimeRefresher for one very specific thing. "Press F5 at a certain time". Yep, that's it. I love
            just making programs to solve these tiny little inconveniences. Knowing how to code really <em>is</em> like
            having superpowers.
        </p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/TimeRefresher">TimeRefresher on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="RoundUp">RoundUp</h2>
        <h3 class="article-subtitle">7 May - 23 May 2021</h3>
        <h3 class="article-subtitle">Python</h3>
        <img src="../images/projects/roundup_visual.png" class="article-image-intext" style="width: 40%;"
            alt="A visual of what RoundUp does">
        <p>
            RoundUp is a single Python script that copies all files from a directory tree into a single folder. The
            <a href="{{ site.nitroguy.socials.github.link }}/RoundUp#readme">README</a> does a better job of explaining
            this so check it out if you're interested. Just
            like with TimeRefresher, I created this to automate a process I often have had to do manually. Specifically,
            to deal with photos that were automatically organized into folders by programs against my will.
        </p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/RoundUp">RoundUp on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="tuscon">tuscon</h2>
        <h3 class="article-subtitle">21 March - 9 April 2021</h3>
        <h3 class="article-subtitle">Python - BeautifulSoup</h3>
        <p>
            tuscon (yes, you read that right, that really is the name) is a super-simple web-templating library. All it
            is is HTML files with parameters, if statements, and
            for loops. I talk about my (unfortunate) reason for creating tuscon in that <a
                href="about_website.html">article about my website</a>.
        </p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/tuscon">tuscon on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="fructose">fructose</h2>
        <h3 class="article-subtitle">19 June 2020</h3>
        <h3 class="article-subtitle">Python, HTML, CSS, JavaScript - Flask, SQLite</h3>
        <img src="../images/projects/fructose.png" class="article-image-intext" style="width: 40%;"
            alt="The docbox homepage">
        <p>A sweet and simple file hosting service.</p>
        <p>This is another one-day project made by <a href="https://prydt.xyz/">prydt</a> and myself. You could call it a "sequel" to docbox.
        Making these two were super fun and I definitely learned a lot in the process. They were like mini self-run hackathons!
        </p>
        <p><a href="https://github.com/woke-oats/fructose">fructose on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="docbox">docbox</h2>
        <h3 class="article-subtitle">13 June 2020</h3>
        <h3 class="article-subtitle">Python, HTML, CSS, JavaScript - Flask, SQLite</h3>
        <img src="../images/projects/docbox.png" class="article-image-intext" style="width: 40%;"
            alt="The docbox homepage">
        <p>A text storage server for you and all your friends. It's Pastebin basically.</p>
        <p><a href="https://prydt.xyz/">prydt</a> and I made this in one day during the 2020 COVID lockdown.
            This was my first experience working on a full-stack web app, albeit a simple one.
        </p>
        <p><a href="https://github.com/woke-oats/docbox">docbox on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="Pi555">Pi555</h2>
        <h3 class="article-subtitle">ca. 2016 - 22 December 2019</h3>
        <h3 class="article-subtitle">Java - MIDICSV, Pi4J, Raspberry Pi GPIO</h3>
        <p>
            Pi555 was my first Computer Engineering, microcontroller-type project thing and boy oh boy did I bite off
            more than I could chew with this one. Though intimidating, I was able to finish this project and I might
            consider it my <em>magnum opus</em>. It is VERY cool, trust me.
        </p>
        <p>
            ...okay so I can't exactly <em>show</em> it to you but I guess I can describe what it is. So, a <a
                href="https://en.wikipedia.org/wiki/555_timer_IC">555 timer</a> is a chip that can be used to generate a
            square wave at a given frequency. With the right configuration, you can get it to play a tone on a speaker.
            My goal for this project was to play music using the tone generated by the 555 timer. The way you'd change
            the pitch of the tone is by changing the resistance between two of the chip's pins and I used a digital
            potentiometer for this.
        </p>
        <p>
            As if I hadn't already had my work cut out for me, knowing hardly anything about Computer Engineering stuff,
            I wanted to be able to use MIDI files as the source for the music. What all of this ultimately resulted in
            was a Java program (probably should've used Python though) that read through a MIDI file and translated it
            into something that the "music player" Java program could use. This "music player" program (which ran on a
            Raspberry PI) played the correct notes at the correct times on the 555 timer by sending bytes to the digital
            potentiometer through its GPIO pins.
        </p>
        <p>And... yeah. It worked. And it was awesome. I really wish I had something else to show you here. Sorry!</p>
        <hr>

        <h2 class="article-subsection" id="ClickType">ClickType</h2>
        <h3 class="article-subtitle">6 May - 8 May 2019</h3>
        <h3 class="article-subtitle">HTML, CSS, JavaScript</h3>
        <p>
            Let's go straight from awesome and complex back to simple and ridiculous. Ever wanted to hear an annoying
            click sound every time you press a key? No? Too bad; ClickType. Now you can experience the cacophony of blue
            mechanical keyboard switches at no cost to you!
        </p>
        <p><a href="{{ site.nitroguy.socials.website.link }}/ClickType">ClickType</a></p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/ClickType">ClickType on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="ResistorTool">ResistorTool</h2>
        <h3 class="article-subtitle">5 August 2018</h3>
        <h3 class="article-subtitle">HTML, CSS, JavaScript - Bootstrap</h3>
        <p>
            Tired of memorizing vulgar acronyms to help you read the resistance values of resistors from the colored
            stripes? Or maybe you're just too lazy to learn them at all? Just input the colors into this tool and be
            enlightened.
        </p>
        <p><a href="{{ site.nitroguy.socials.website.link }}/ResistorTool">ResistorTool</a></p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/ResistorTool">ResistorTool on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="RoboPlato 2000">RoboPlato 2000</h2>
        <h3 class="article-subtitle">ca. January 2018</h3>
        <p>That time I trained a <a href="https://github.com/karpathy/char-rnn"> character-based recurrent neural
                network</a> on Plato's works.</p>
        <p>
            Featuring such great wisdom as: "See none also those things of this class of great antiquity does not charm
            from the eye of our manner in which young or motion is illusion to balanced; whereas all this to equals in a
            long sufficient indissolution of their rules and proportions"
        </p>
        <p><a href="roboplato.html">The Essential Wisdom of RoboPlato 2000</a></p>
        <hr>

        <h2 class="article-subsection" id="Jumpy">Jumpy</h2>
        <h3 class="article-subtitle">17 April 2017 - 4 December 2018</h3>
        <h3 class="article-subtitle">HTML, CSS, JavaScript</h3>
        <a href="{{ site.nitroguy.socials.website.link }}/Jumpy"><img src="../gifs/jumpy.gif"
                class="article-image-intext" style="width: 40%;" alt="A gif of Jumpy gameplay"></a>
        <p>
            Memories, memories. Jumpy is a game I "made" by half following a tutorial and half doing my own thing. I was
            a rather unexperienced but quickly-learning programmer at the time and I remember being so happy when I made
            a nested for-loop that read through the 2D arrays that stored the levels. I showed this game to a bunch of
            people at school and it was so awesome to see them all play it and subsequently rage at how hard it was. To
            this day I still have the list on my phone that contains the names of the people I knew who beat Jumpy. All
            13 of them.
        </p>
        <p>
            The game itself is a pretty basic HTML5 canvas web game. It's a typical 2D platformer with positively
            asinine level design. The difficulty curve is outta wack. What's funny is that whenever I found a bug with
            the physics, instead of fixing it, I designed levels that used that bug. The epitome of "it's not a bug,
            it's a feature". There's also a level creator, which is pretty awesome.
        </p>
        <p>
            P.S. If you're one of my friends from school and you came to my website just to look for Jumpy, you found
            it! Congrats and welcome home! :)
        </p>
        <p><a href="{{ site.nitroguy.socials.website.link }}/Jumpy">Jumpy</a></p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/Jumpy">Jumpy on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="Dodge3">Dodge3</h2>
        <h3 class="article-subtitle">18 March - 15 June 2017</h3>
        <h3 class="article-subtitle">HTML, CSS, JavaScript</h3>
        <a href="{{ site.nitroguy.socials.website.link }}/Dodge3"><img src="../gifs/dodge3.gif"
                class="article-image-intext" style="width: 40%;" alt="A gif of Dodge3 gameplay"></a>
        <p>
            Another HTML5 canvas web game. This one's remarkably less ...remarkable than Jumpy. Just dodge the red
            rectangles. Not much else to say besides that this was my first big foray into JavaScript. Oh, and I made
            <a href="{{ site.nitroguy.socials.github.link }}/Dodge3/blob/master/music.mp3?raw=true">music</a> for this
            game that doesn't play anymore because of autoplay restrictions and poor implementation lol.
        </p>
        <p>
            And by the way, can we talk about what a horrible name "Dodge3" is? It sounds like it's the third entry in
            the "Dodge" series but nope. It's called that because there are 3 positions you can move to. How fun.
        </p>
        <p><a href="{{ site.nitroguy.socials.website.link }}/Dodge3">Dodge3</a></p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/Dodge3">Dodge3 on GitHub</a></p>
        <hr>

        <h2 class="article-subsection" id="CalcGames">CalcGames</h2>
        <h3 class="article-subtitle">5 January - 11 July 2017</h3>
        <h3 class="article-subtitle">TI-Basic</h3>
        <img src="../gifs/serpent.gif" class="article-image-intext" style="width: 20%;" alt="A gif of Serpent gameplay">
        <img src="../gifs/matrix.gif" class="article-image-intext" style="width: 20%;"
            alt="A gif of Matrix Racer gameplay">
        <p>
            TI-Basic programming is a confusing mess that I absolutely love. There's a huge active community dedicated
            to programming for TI-84 calculators, and I decided to take part by making some of my own games. If you too
            want to waste your time programming for these calculators, it's super fun and I highly recommend learning if
            you're interested. Here's an <a href="http://tibasicdev.wikidot.com/starter-kit">awesome wiki</a> with
            tons of good information.
        </p>
        <p><a href="{{ site.nitroguy.socials.website.link }}/CalcGames">CalcGames</a></p>
        <p><a href="{{ site.nitroguy.socials.github.link }}/CalcGames">CalcGames on GitHub</a></p>
    </div>

    <footer>
        <a class="main-site" href="../index.html">Main Site</a>
    </footer>

    {{ site.footer }}
</body>

</html>